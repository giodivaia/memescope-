{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jasmi\\\\cursor\\\\src\\\\context\\\\ColumnVisibilityContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultColumns = [{\n  id: \"new\",\n  name: \"New\"\n}, {\n  id: \"smart\",\n  name: \"Smart Money\"\n}, {\n  id: \"telegram\",\n  name: \"Telegram\"\n}, {\n  id: \"twitter\",\n  name: \"Twitter\"\n}, {\n  id: \"pnl\",\n  name: \"PnL\"\n}\n// Add more columns as needed\n];\nconst ColumnVisibilityContext = /*#__PURE__*/createContext();\nexport function useColumnVisibility() {\n  _s();\n  return useContext(ColumnVisibilityContext);\n}\n_s(useColumnVisibility, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ColumnVisibilityProvider({\n  children\n}) {\n  _s2();\n  const [visibleColumns, setVisibleColumns] = useState(defaultColumns.map(c => c.id));\n  const toggleColumn = id => {\n    setVisibleColumns(cols => cols.includes(id) ? cols.filter(c => c !== id) : [...cols, id]);\n  };\n  return /*#__PURE__*/_jsxDEV(ColumnVisibilityContext.Provider, {\n    value: {\n      columns: defaultColumns,\n      visibleColumns,\n      toggleColumn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s2(ColumnVisibilityProvider, \"SHHIYFxHjk20z1OTNKD2ULtRKbQ=\");\n_c = ColumnVisibilityProvider;\nvar _c;\n$RefreshReg$(_c, \"ColumnVisibilityProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","defaultColumns","id","name","ColumnVisibilityContext","useColumnVisibility","_s","ColumnVisibilityProvider","children","_s2","visibleColumns","setVisibleColumns","map","c","toggleColumn","cols","includes","filter","Provider","value","columns","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jasmi/cursor/src/context/ColumnVisibilityContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst defaultColumns = [\r\n  { id: \"new\", name: \"New\" },\r\n  { id: \"smart\", name: \"Smart Money\" },\r\n  { id: \"telegram\", name: \"Telegram\" },\r\n  { id: \"twitter\", name: \"Twitter\" },\r\n  { id: \"pnl\", name: \"PnL\" },\r\n  // Add more columns as needed\r\n];\r\n\r\nconst ColumnVisibilityContext = createContext();\r\n\r\nexport function useColumnVisibility() {\r\n  return useContext(ColumnVisibilityContext);\r\n}\r\n\r\nexport function ColumnVisibilityProvider({ children }) {\r\n  const [visibleColumns, setVisibleColumns] = useState(defaultColumns.map(c => c.id));\r\n\r\n  const toggleColumn = (id) => {\r\n    setVisibleColumns(cols =>\r\n      cols.includes(id) ? cols.filter(c => c !== id) : [...cols, id]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnVisibilityContext.Provider value={{\r\n      columns: defaultColumns,\r\n      visibleColumns,\r\n      toggleColumn\r\n    }}>\r\n      {children}\r\n    </ColumnVisibilityContext.Provider>\r\n  );\r\n} "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,GAAG,CACrB;EAAEC,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAM,CAAC,EAC1B;EAAED,EAAE,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAc,CAAC,EACpC;EAAED,EAAE,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAW,CAAC,EACpC;EAAED,EAAE,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAU,CAAC,EAClC;EAAED,EAAE,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAM;AACzB;AAAA,CACD;AAED,MAAMC,uBAAuB,gBAAGR,aAAa,CAAC,CAAC;AAE/C,OAAO,SAASS,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EACpC,OAAOT,UAAU,CAACO,uBAAuB,CAAC;AAC5C;AAACE,EAAA,CAFeD,mBAAmB;AAInC,OAAO,SAASE,wBAAwBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACrD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAACG,cAAc,CAACW,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACX,EAAE,CAAC,CAAC;EAEnF,MAAMY,YAAY,GAAIZ,EAAE,IAAK;IAC3BS,iBAAiB,CAACI,IAAI,IACpBA,IAAI,CAACC,QAAQ,CAACd,EAAE,CAAC,GAAGa,IAAI,CAACE,MAAM,CAACJ,CAAC,IAAIA,CAAC,KAAKX,EAAE,CAAC,GAAG,CAAC,GAAGa,IAAI,EAAEb,EAAE,CAC/D,CAAC;EACH,CAAC;EAED,oBACEF,OAAA,CAACI,uBAAuB,CAACc,QAAQ;IAACC,KAAK,EAAE;MACvCC,OAAO,EAAEnB,cAAc;MACvBS,cAAc;MACdI;IACF,CAAE;IAAAN,QAAA,EACCA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACuB,CAAC;AAEvC;AAACf,GAAA,CAlBeF,wBAAwB;AAAAkB,EAAA,GAAxBlB,wBAAwB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}