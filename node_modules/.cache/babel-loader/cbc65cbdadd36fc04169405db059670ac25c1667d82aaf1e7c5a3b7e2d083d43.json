{"ast":null,"code":"import React,{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const defaultColumns=[{id:\"new\",name:\"New\"},{id:\"smart\",name:\"Smart Money\"},{id:\"telegram\",name:\"Telegram\"},{id:\"twitter\",name:\"Twitter\"},{id:\"pnl\",name:\"PnL\"}// Add more columns as needed\n];const ColumnVisibilityContext=/*#__PURE__*/createContext();export function useColumnVisibility(){return useContext(ColumnVisibilityContext);}export function ColumnVisibilityProvider(_ref){let{children}=_ref;const[visibleColumns,setVisibleColumns]=useState(defaultColumns.map(c=>c.id));const toggleColumn=id=>{setVisibleColumns(cols=>cols.includes(id)?cols.filter(c=>c!==id):[...cols,id]);};return/*#__PURE__*/_jsx(ColumnVisibilityContext.Provider,{value:{columns:defaultColumns,visibleColumns,toggleColumn},children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","defaultColumns","id","name","ColumnVisibilityContext","useColumnVisibility","ColumnVisibilityProvider","_ref","children","visibleColumns","setVisibleColumns","map","c","toggleColumn","cols","includes","filter","Provider","value","columns"],"sources":["C:/Users/jasmi/cursor/src/context/ColumnVisibilityContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst defaultColumns = [\r\n  { id: \"new\", name: \"New\" },\r\n  { id: \"smart\", name: \"Smart Money\" },\r\n  { id: \"telegram\", name: \"Telegram\" },\r\n  { id: \"twitter\", name: \"Twitter\" },\r\n  { id: \"pnl\", name: \"PnL\" },\r\n  // Add more columns as needed\r\n];\r\n\r\nconst ColumnVisibilityContext = createContext();\r\n\r\nexport function useColumnVisibility() {\r\n  return useContext(ColumnVisibilityContext);\r\n}\r\n\r\nexport function ColumnVisibilityProvider({ children }) {\r\n  const [visibleColumns, setVisibleColumns] = useState(defaultColumns.map(c => c.id));\r\n\r\n  const toggleColumn = (id) => {\r\n    setVisibleColumns(cols =>\r\n      cols.includes(id) ? cols.filter(c => c !== id) : [...cols, id]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ColumnVisibilityContext.Provider value={{\r\n      columns: defaultColumns,\r\n      visibleColumns,\r\n      toggleColumn\r\n    }}>\r\n      {children}\r\n    </ColumnVisibilityContext.Provider>\r\n  );\r\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,cAAc,CAAG,CACrB,CAAEC,EAAE,CAAE,KAAK,CAAEC,IAAI,CAAE,KAAM,CAAC,CAC1B,CAAED,EAAE,CAAE,OAAO,CAAEC,IAAI,CAAE,aAAc,CAAC,CACpC,CAAED,EAAE,CAAE,UAAU,CAAEC,IAAI,CAAE,UAAW,CAAC,CACpC,CAAED,EAAE,CAAE,SAAS,CAAEC,IAAI,CAAE,SAAU,CAAC,CAClC,CAAED,EAAE,CAAE,KAAK,CAAEC,IAAI,CAAE,KAAM,CACzB;AAAA,CACD,CAED,KAAM,CAAAC,uBAAuB,cAAGR,aAAa,CAAC,CAAC,CAE/C,MAAO,SAAS,CAAAS,mBAAmBA,CAAA,CAAG,CACpC,MAAO,CAAAR,UAAU,CAACO,uBAAuB,CAAC,CAC5C,CAEA,MAAO,SAAS,CAAAE,wBAAwBA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACnD,KAAM,CAACE,cAAc,CAAEC,iBAAiB,CAAC,CAAGZ,QAAQ,CAACG,cAAc,CAACU,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACV,EAAE,CAAC,CAAC,CAEnF,KAAM,CAAAW,YAAY,CAAIX,EAAE,EAAK,CAC3BQ,iBAAiB,CAACI,IAAI,EACpBA,IAAI,CAACC,QAAQ,CAACb,EAAE,CAAC,CAAGY,IAAI,CAACE,MAAM,CAACJ,CAAC,EAAIA,CAAC,GAAKV,EAAE,CAAC,CAAG,CAAC,GAAGY,IAAI,CAAEZ,EAAE,CAC/D,CAAC,CACH,CAAC,CAED,mBACEF,IAAA,CAACI,uBAAuB,CAACa,QAAQ,EAACC,KAAK,CAAE,CACvCC,OAAO,CAAElB,cAAc,CACvBQ,cAAc,CACdI,YACF,CAAE,CAAAL,QAAA,CACCA,QAAQ,CACuB,CAAC,CAEvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}